// Generated by dagger.internal.codegen.ComponentProcessor (https://google.github.io/dagger).
package meh.daniel.com.movieunderbeer.presentation;

import com.github.terrakok.cicerone.NavigatorHolder;
import dagger.MembersInjector;
import javax.inject.Provider;
import meh.daniel.com.movieunderbeer.presentation.navigation.common.IScreens;

public final class AppActivity_MembersInjector implements MembersInjector<AppActivity> {
  private final Provider<NavigatorHolder> navigatorHolderProvider;

  private final Provider<IScreens> appScreensAndScreensProvider;

  public AppActivity_MembersInjector(
      Provider<NavigatorHolder> navigatorHolderProvider,
      Provider<IScreens> appScreensAndScreensProvider) {
    this.navigatorHolderProvider = navigatorHolderProvider;
    this.appScreensAndScreensProvider = appScreensAndScreensProvider;
  }

  public static MembersInjector<AppActivity> create(
      Provider<NavigatorHolder> navigatorHolderProvider,
      Provider<IScreens> appScreensAndScreensProvider) {
    return new AppActivity_MembersInjector(navigatorHolderProvider, appScreensAndScreensProvider);
  }

  @Override
  public void injectMembers(AppActivity instance) {
    injectNavigatorHolder(instance, navigatorHolderProvider.get());
    injectScreens(instance, appScreensAndScreensProvider.get());
    injectAppScreens(instance, appScreensAndScreensProvider.get());
  }

  public static void injectNavigatorHolder(AppActivity instance, NavigatorHolder navigatorHolder) {
    instance.navigatorHolder = navigatorHolder;
  }

  public static void injectScreens(AppActivity instance, IScreens screens) {
    instance.screens = screens;
  }

  public static void injectAppScreens(AppActivity instance, IScreens AppScreens) {
    instance.appScreens = AppScreens;
  }
}
